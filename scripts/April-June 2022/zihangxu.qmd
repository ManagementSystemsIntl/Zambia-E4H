---
title: "zihangxu"
format:
  html:
    theme: default
---

```{r}
library(fpp)
library(forecast)
library(backtest)
library(quantmod)
library(tseries)
library(zoo)
library(lubridate)
library(tseries)
library(TSA)
library(scales)
library(MTS)
```
#the data we prepare
```{r}
anc1p <- mat %>%
  filter(subpop=="anc1p") %>%
  select(mnthyr, rate, subpop) 

anc1p_pred <- anc1p %>%
  slice(-(52:54))
anc1p_ts <- ts(anc1p_pred$rate)
anc1ptrue_ts=ts(anc1p$rate)
```
#plot, acf and pacf
```{r}
adf.test(anc1p_ts)
par(mfrow=c(1,3))
plot(anc1p_ts,ylab="rate")
acf(anc1p_ts)
pacf(anc1p_ts)
#seems like the data is non-stationary
#try diff to buil ARIMA, basically we can try log transformation when we have increase trend data
d1=diff(anc1p_ts,differences=1)
par(mfrow=c(1,3))
plot(d1,ylab="rate")
acf(d1)
pacf(d1)
adf.test(d1)
eacf(d1,ma.max = 10)

d2=diff(anc1p_ts,differences=2)
par(mfrow=c(1,3))
plot(d2,ylab="rate")
acf(d2)
pacf(d2)
adf.test(d2)
eacf(d2,ma.max = 10)
#much better
#consider diff=1
# consider ar3,4,15 from pacf
# ma3,4 from acf
```
#try auto first arima(2,1,3)
```{r}

anc1p_arim <- auto.arima(d1)
anc1p_arim
```
#arima(2,1,3)
```{r}
arima213=Arima(anc1p_ts, order=c(2,1,3))
tsdiag(arima213)
autoplot(forecast(arima213,h=3))
plot(anc1ptrue_ts)
backtest(arima213,anc1ptrue_ts,orig=52)

anc1p_forecast <- data.frame(forecast(arima213, h=3)) %>%
  mutate(mnthyr=ymd(c("2022-04-01","2022-05-01","2022-06-01")),
         forecast=1) %>%
  select(mnthyr,
         rate=1,
         lower=4,
         upper=5,
         forecast)
#here the forecast is the diff like Yt-Y(t-1)

ggplot(anc1p, aes(mnthyr, rate)) +
  geom_point(color="dodgerblue") +
  stat_smooth() +
  geom_point(data=anc1p_forecast, aes(y=rate), color="darkgoldenrod2") +
  stat_smooth(data=anc1p_forecast, aes(y=rate), color="darkgoldenrod2",fill="darkgoldenrod2") +
  geom_ribbon(data=anc1p_forecast, aes(ymin=lower, ymax=upper),
              fill="darkgoldenrod2",
              alpha=.2) +
  scale_y_continuous(limits=c(0,.5),
                     labels=percent_format(accuracy=1))


```

#try the arima(3,1,0) model
```{r}
ar3=Arima(anc1p_ts, order=c(3,1,0))
ar3
tsdiag(ar3)#check the diagnostics, seems good
autoplot(forecast(ar3,h=3))
plot(anc1ptrue_ts)
backtest(ar3,anc1ptrue_ts,orig=52)

ar3_forecast <- data.frame(forecast(ar3,h=3)) %>%
  mutate(mnthyr=ymd(c("2022-04-01","2022-05-01","2022-06-01")),
         forecast=1) %>%
  select(mnthyr,
         rate=1,
         lower=4,
         upper=5,
         forecast)

ggplot(anc1p, aes(mnthyr, rate)) +
  geom_point(color="dodgerblue") +
  stat_smooth() +
  geom_point(data=ar3_forecast, aes(y=rate), color="darkgoldenrod2") +
  stat_smooth(data=ar3_forecast, aes(y=rate), color="darkgoldenrod2",fill="darkgoldenrod2") +
  geom_ribbon(data=ar3_forecast, aes(ymin=lower, ymax=upper),
              fill="darkgoldenrod2",
              alpha=.2) +
  scale_y_continuous(limits=c(0,.5),
                     labels=percent_format(accuracy=1))



```
#try arima(0,1,3)
```{r}
ma3=Arima(anc1p_ts, order=c(0,1,3))
ma3
tsdiag(ma3)#check the diagnostics, seems good
autoplot(forecast(ma3,h=3))
plot(anc1ptrue_ts)
backtest(ma3,anc1ptrue_ts,orig=52)

ma3_forecast <- data.frame(forecast(ma3,h=3)) %>%
  mutate(mnthyr=ymd(c("2022-04-01","2022-05-01","2022-06-01")),
         forecast=1) %>%
  select(mnthyr,
         rate=1,
         lower=4,
         upper=5,
         forecast)

ggplot(anc1p, aes(mnthyr, rate)) +
  geom_point(color="dodgerblue") +
  stat_smooth() +
  geom_point(data=ma3_forecast, aes(y=rate), color="darkgoldenrod2") +
  stat_smooth(data=ma3_forecast, aes(y=rate), color="darkgoldenrod2",fill="darkgoldenrod2") +
  geom_ribbon(data=ma3_forecast, aes(ymin=lower, ymax=upper),
              fill="darkgoldenrod2",
              alpha=.2) +
  scale_y_continuous(limits=c(0,.5),
                     labels=percent_format(accuracy=1))

```
#try arima(0,1,4)

```{r}
ma4=Arima(anc1p_ts, order=c(0,1,4))
ma4
tsdiag(ma4)#check the diagnostics, seems good
autoplot(forecast(ma4,h=3))
plot(anc1ptrue_ts)
backtest(ma4,anc1ptrue_ts,orig=52)

ma4_forecast <- data.frame(forecast(ma4,h=3)) %>%
  mutate(mnthyr=ymd(c("2022-04-01","2022-05-01","2022-06-01")),
         forecast=1) %>%
  select(mnthyr,
         rate=1,
         lower=4,
         upper=5,
         forecast)

ggplot(anc1p, aes(mnthyr, rate)) +
  geom_point(color="dodgerblue") +
  stat_smooth() +
  geom_point(data=ma4_forecast, aes(y=rate), color="darkgoldenrod2") +
  stat_smooth(data=ma4_forecast, aes(y=rate), color="darkgoldenrod2",fill="darkgoldenrod2") +
  geom_ribbon(data=ma4_forecast, aes(ymin=lower, ymax=upper),
              fill="darkgoldenrod2",
              alpha=.2) +
  scale_y_continuous(limits=c(0,.5),
                     labels=percent_format(accuracy=1))

```
#arima(0,1,4) with 0 coefficients for some ma parameters
```{r}
ma4_1=Arima(anc1p_ts, order=c(0,1,4), fixed=c(0,0,NA,NA))
ma4_1
tsdiag(ma4_1)#check the diagnostics, seems good
autoplot(forecast(ma4_1,h=3))
plot(anc1ptrue_ts)
backtest(ma4_1,anc1ptrue_ts,orig=52)

ma4_1_forecast <- data.frame(forecast(ma4_1,h=3)) %>%
  mutate(mnthyr=ymd(c("2022-04-01","2022-05-01","2022-06-01")),
         forecast=1) %>%
  select(mnthyr,
         rate=1,
         lower=4,
         upper=5,
         forecast)

ggplot(anc1p, aes(mnthyr, rate)) +
  geom_point(color="dodgerblue") +
  stat_smooth() +
  geom_point(data=ma4_1_forecast, aes(y=rate), color="darkgoldenrod2") +
  stat_smooth(data=ma4_1_forecast, aes(y=rate), color="darkgoldenrod2",fill="darkgoldenrod2") +
  geom_ribbon(data=ma4_1_forecast, aes(ymin=lower, ymax=upper),
              fill="darkgoldenrod2",
              alpha=.2) +
  scale_y_continuous(limits=c(0,.5),
                     labels=percent_format(accuracy=1))

```